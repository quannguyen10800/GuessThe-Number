{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Ionicons } from '@expo/vector-icons';\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport GuessLogItem from \"../components/game/GuessLogItem\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\nvar minBoundary = 1;\nvar maxBoundary = 100;\nfunction GameScreen(_ref) {\n  var userNumber = _ref.userNumber,\n    onGameOver = _ref.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n  var _useState = useState(initialGuess),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentGuess = _useState2[0],\n    setCurrentGuess = _useState2[1];\n  var _useState3 = useState([initialGuess]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    guessRounds = _useState4[0],\n    setGuessRounds = _useState4[1];\n  useEffect(function () {\n    if (currentGuess === userNumber) {\n      onGameOver(guessRounds.length);\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n  useEffect(function () {\n    minBoundary = 1;\n    maxBoundary = 100;\n  }, []);\n  function nextGuessHandler(direction) {\n    if (direction === 'lower' && currentGuess < userNumber || direction === 'greater' && currentGuess > userNumber) {\n      Alert.alert(\"Don't lie!\", 'You know that this is wrong...', [{\n        text: 'Sorry!',\n        style: 'cancel'\n      }]);\n      return;\n    }\n    if (direction === 'lower') {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n    var newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRndNumber);\n    setGuessRounds(function (prevGuessRounds) {\n      return [newRndNumber].concat(_toConsumableArray(prevGuessRounds));\n    });\n  }\n  var guessRoundsListLength = guessRounds.length;\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponent's Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(Card, {\n      children: [_jsx(InstructionText, {\n        style: styles.instructionText,\n        children: \"Higher or lower?\"\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, 'lower'),\n            children: _jsx(Ionicons, {\n              name: \"md-remove\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, 'greater'),\n            children: _jsx(Ionicons, {\n              name: \"md-add\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.listContainer,\n      children: _jsx(FlatList, {\n        data: guessRounds,\n        renderItem: function renderItem(itemData) {\n          return _jsx(GuessLogItem, {\n            roundNumber: guessRoundsListLength - itemData.index,\n            guess: itemData.item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        }\n      })\n    })]\n  });\n}\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  },\n  instructionText: {\n    marginBottom: 12\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    flex: 1\n  },\n  listContainer: {\n    flex: 1,\n    padding: 16\n  }\n});","map":{"version":3,"names":["useState","useEffect","View","StyleSheet","Alert","Text","FlatList","Ionicons","NumberContainer","Card","InstructionText","PrimaryButton","Title","GuessLogItem","jsx","_jsx","jsxs","_jsxs","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","_ref","userNumber","onGameOver","initialGuess","_useState","_useState2","_slicedToArray","currentGuess","setCurrentGuess","_useState3","_useState4","guessRounds","setGuessRounds","length","nextGuessHandler","direction","alert","text","style","newRndNumber","prevGuessRounds","concat","_toConsumableArray","guessRoundsListLength","styles","screen","children","instructionText","buttonsContainer","buttonContainer","onPress","bind","name","size","color","listContainer","data","renderItem","itemData","roundNumber","index","guess","item","keyExtractor","create","flex","padding","marginBottom","flexDirection"],"sources":["/Users/quannguyen/Downloads/starting-project/screens/GameScreen.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { View, StyleSheet, Alert, Text, FlatList } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport NumberContainer from '../components/game/NumberContainer';\nimport Card from '../components/ui/Card';\nimport InstructionText from '../components/ui/InstructionText';\nimport PrimaryButton from '../components/ui/PrimaryButton';\nimport Title from '../components/ui/Title';\nimport GuessLogItem from '../components/game/GuessLogItem';\n\nfunction generateRandomBetween(min, max, exclude) {\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nlet minBoundary = 1;\nlet maxBoundary = 100;\n\nfunction GameScreen({ userNumber, onGameOver }) {\n  const initialGuess = generateRandomBetween(1, 100, userNumber);\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\n  const [guessRounds, setGuessRounds] = useState([initialGuess]);\n\n  useEffect(() => {\n    if (currentGuess === userNumber) {\n      onGameOver(guessRounds.length);\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n\n  useEffect(() => {\n    minBoundary = 1;\n    maxBoundary = 100;\n  }, []);\n\n  function nextGuessHandler(direction) {\n    // direction => 'lower', 'greater'\n    if (\n      (direction === 'lower' && currentGuess < userNumber) ||\n      (direction === 'greater' && currentGuess > userNumber)\n    ) {\n      Alert.alert(\"Don't lie!\", 'You know that this is wrong...', [\n        { text: 'Sorry!', style: 'cancel' },\n      ]);\n      return;\n    }\n\n    if (direction === 'lower') {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    const newRndNumber = generateRandomBetween(\n      minBoundary,\n      maxBoundary,\n      currentGuess\n    );\n    setCurrentGuess(newRndNumber);\n    setGuessRounds((prevGuessRounds) => [newRndNumber, ...prevGuessRounds]);\n  }\n\n  const guessRoundsListLength = guessRounds.length;\n\n  return (\n    <View style={styles.screen}>\n      <Title>Opponent's Guess</Title>\n      <NumberContainer>{currentGuess}</NumberContainer>\n      <Card>\n        <InstructionText style={styles.instructionText}>\n          Higher or lower?\n        </InstructionText>\n        <View style={styles.buttonsContainer}>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, 'lower')}>\n              <Ionicons name=\"md-remove\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, 'greater')}>\n              <Ionicons name=\"md-add\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n        </View>\n      </Card>\n      <View style={styles.listContainer}>\n        {/* {guessRounds.map(guessRound => <Text key={guessRound}>{guessRound}</Text>)} */}\n        <FlatList\n          data={guessRounds}\n          renderItem={(itemData) => (\n            <GuessLogItem\n              roundNumber={guessRoundsListLength - itemData.index}\n              guess={itemData.item}\n            />\n          )}\n          keyExtractor={(item) => item}\n        />\n      </View>\n    </View>\n  );\n}\n\nexport default GameScreen;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24,\n  },\n  instructionText: {\n    marginBottom: 12,\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n  listContainer: {\n    flex: 1,\n    padding: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}